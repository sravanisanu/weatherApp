{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\shrav\\\\Downloads\\\\weatherReportUp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(weatherApiErrorReceived),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchWeatherApiError);\n\nimport { takeEvery, call } from \"redux-saga/effects\";\nimport * as actions from \"../actions\";\nimport { toast } from \"react-toastify\";\n\nfunction weatherApiErrorReceived(action) {\n  return _regeneratorRuntime.wrap(function weatherApiErrorReceived$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return call(toast.error, \"Error Received: \".concat(action.code));\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nfunction watchWeatherApiError() {\n  return _regeneratorRuntime.wrap(function watchWeatherApiError$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeEvery(actions.API_ERROR, weatherApiErrorReceived);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nexport default [watchWeatherApiError];","map":{"version":3,"sources":["C:\\Users\\shrav\\Downloads\\weatherReportUp\\src\\store\\sagas\\ApiErrors.js"],"names":["weatherApiErrorReceived","watchWeatherApiError","takeEvery","call","actions","toast","action","error","code","API_ERROR"],"mappings":";;;;yBAIUA,uB;;;yBAIAC,oB;;AARV,SAASC,SAAT,EAAoBC,IAApB,QAAgC,oBAAhC;AACA,OAAO,KAAKC,OAAZ,MAAyB,YAAzB;AACA,SAASC,KAAT,QAAsB,gBAAtB;;AAEA,SAAUL,uBAAV,CAAkCM,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMH,IAAI,CAACE,KAAK,CAACE,KAAP,4BAAiCD,MAAM,CAACE,IAAxC,EAAV;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,SAAUP,oBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMC,SAAS,CAACE,OAAO,CAACK,SAAT,EAAoBT,uBAApB,CAAf;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,eAAe,CAACC,oBAAD,CAAf","sourcesContent":["import { takeEvery, call } from \"redux-saga/effects\";\r\nimport * as actions from \"../actions\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nfunction* weatherApiErrorReceived(action) {\r\n  yield call(toast.error, `Error Received: ${action.code}`);\r\n}\r\n\r\nfunction* watchWeatherApiError() {\r\n  yield takeEvery(actions.API_ERROR, weatherApiErrorReceived);\r\n}\r\n\r\nexport default [watchWeatherApiError];\r\n"]},"metadata":{},"sourceType":"module"}