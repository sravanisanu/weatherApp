{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\shrav\\\\Downloads\\\\weatherReportUp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\shrav\\\\Downloads\\\\weatherReportUp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\shrav\\\\Downloads\\\\weatherReportUp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\shrav\\\\Downloads\\\\weatherReportUp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\shrav\\\\Downloads\\\\weatherReportUp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\shrav\\\\Downloads\\\\weatherReportUp\\\\src\\\\components\\\\WeatherReport.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../store/actions\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeaderRaw from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nvar cardStyles = function cardStyles(theme) {\n  return {\n    root: {\n      background: theme.palette.primary.main\n    },\n    title: {\n      color: \"white\"\n    }\n  };\n};\n\nvar CardHeader = withStyles(cardStyles)(CardHeaderRaw);\nvar styles = {\n  displayCard: {\n    margin: \"5% 25%\",\n    borderRadius: \"12px\",\n    boxShadow: \"1px 1px 4px steelblue\"\n  },\n  weatherInfo: {\n    margin: \"20px 0\"\n  },\n  weatherInfoItem: {\n    width: \"250px\",\n    display: \"flex\",\n    margin: \"auto\"\n  },\n  label: {\n    width: \"50%\",\n    fontSize: \"18px\"\n  }\n};\n\nvar WeatherReport =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(WeatherReport, _React$Component);\n\n  function WeatherReport() {\n    _classCallCheck(this, WeatherReport);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(WeatherReport).apply(this, arguments));\n  }\n\n  _createClass(WeatherReport, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this = this;\n\n      setInterval(function () {\n        return _this.props.onLoad();\n      }, 4000);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          metrics = _this$props.metrics;\n      var weatherData = metrics.length ? metrics.find(function (o, i) {\n        return i === metrics.length - 1;\n      }) : false;\n      return React.createElement(Card, {\n        className: classes.displayCard,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        title: \"WeatherReport Visualization\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(CardContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, weatherData ? React.createElement(\"div\", {\n        className: classes.weatherInfo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.weatherInfoItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: classes.label,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Temperature\"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, weatherData.metric)), React.createElement(\"div\", {\n        className: classes.weatherInfoItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: classes.label,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Latitude\"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, weatherData.latitude)), React.createElement(\"div\", {\n        className: classes.weatherInfoItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: classes.label,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Longitude\"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, weatherData.longitude)), React.createElement(\"div\", {\n        className: classes.weatherInfoItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: classes.label,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Last Received\"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, Math.round((new Date().getTime() - weatherData.timestamp) / 1000) + \" seconds ago\"))) : React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"loading Details...\")));\n    }\n  }]);\n\n  return WeatherReport;\n}(React.Component);\n\n;\n\nvar mapState = function mapState(state, ownProps) {\n  var _state$weather = state.weather,\n      loading = _state$weather.loading,\n      metrics = _state$weather.metrics;\n  return {\n    loading: loading,\n    metrics: metrics\n  };\n};\n\nvar mapDispatch = function mapDispatch(dispatch) {\n  return {\n    onLoad: function onLoad() {\n      return dispatch({\n        type: actions.GET_WEATHER,\n        longitude: -95.3698,\n        latitude: 29.7604\n      });\n    }\n  };\n};\n\nexport default connect(mapState, mapDispatch)(withStyles(styles)(WeatherReport));","map":{"version":3,"sources":["C:\\Users\\shrav\\Downloads\\weatherReportUp\\src\\components\\WeatherReport.js"],"names":["React","connect","actions","Card","CardHeaderRaw","CardContent","withStyles","cardStyles","theme","root","background","palette","primary","main","title","color","CardHeader","styles","displayCard","margin","borderRadius","boxShadow","weatherInfo","weatherInfoItem","width","display","label","fontSize","WeatherReport","setInterval","props","onLoad","classes","metrics","weatherData","length","find","o","i","metric","latitude","longitude","Math","round","Date","getTime","timestamp","Component","mapState","state","ownProps","weather","loading","mapDispatch","dispatch","type","GET_WEATHER"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAO,KAAKC,OAAZ,MAAyB,kBAAzB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,SAAQC,UAAR,QAAyB,0BAAzB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAC,KAAK;AAAA,SAAK;AAC3BC,IAAAA,IAAI,EAAE;AACJC,MAAAA,UAAU,EAAEF,KAAK,CAACG,OAAN,CAAcC,OAAd,CAAsBC;AAD9B,KADqB;AAI3BC,IAAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EAAE;AADF;AAJoB,GAAL;AAAA,CAAxB;;AAQA,IAAMC,UAAU,GAAGV,UAAU,CAACC,UAAD,CAAV,CAAuBH,aAAvB,CAAnB;AAEA,IAAMa,MAAM,GAAG;AACbC,EAAAA,WAAW,EAAE;AACXC,IAAAA,MAAM,EAAE,QADG;AAEXC,IAAAA,YAAY,EAAE,MAFH;AAGXC,IAAAA,SAAS,EAAE;AAHA,GADA;AAMbC,EAAAA,WAAW,EAAE;AACXH,IAAAA,MAAM,EAAE;AADG,GANA;AASbI,EAAAA,eAAe,EAAE;AACfC,IAAAA,KAAK,EAAE,OADQ;AAEfC,IAAAA,OAAO,EAAE,MAFM;AAGfN,IAAAA,MAAM,EAAE;AAHO,GATJ;AAcbO,EAAAA,KAAK,EAAE;AACLF,IAAAA,KAAK,EAAE,KADF;AAELG,IAAAA,QAAQ,EAAE;AAFL;AAdM,CAAf;;IAoBMC,a;;;;;;;;;;;;;wCACgB;AAAA;;AAClBC,MAAAA,WAAW,CAAC;AAAA,eAAM,KAAI,CAACC,KAAL,CAAWC,MAAX,EAAN;AAAA,OAAD,EAA4B,IAA5B,CAAX;AACD;;;6BACQ;AAAA,wBACoB,KAAKD,KADzB;AAAA,UACAE,OADA,eACAA,OADA;AAAA,UACSC,OADT,eACSA,OADT;AAEP,UAAMC,WAAW,GAAGD,OAAO,CAACE,MAAR,GAAiBF,OAAO,CAACG,IAAR,CAAa,UAACC,CAAD,EAAIC,CAAJ;AAAA,eAAQA,CAAC,KAAGL,OAAO,CAACE,MAAR,GAAe,CAA3B;AAAA,OAAb,CAAjB,GAA8D,KAAlF;AACA,aACE,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAEH,OAAO,CAACd,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AAAY,QAAA,KAAK,EAAC,6BAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGgB,WAAW,GAAG;AAAK,QAAA,SAAS,EAAEF,OAAO,CAACV,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACb;AAAK,QAAA,SAAS,EAAEU,OAAO,CAACT,eAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAES,OAAO,CAACN,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOQ,WAAW,CAACK,MAAnB,CAFF,CADa,EAKb;AAAK,QAAA,SAAS,EAAEP,OAAO,CAACT,eAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAES,OAAO,CAACN,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOQ,WAAW,CAACM,QAAnB,CAFF,CALa,EASb;AAAK,QAAA,SAAS,EAAER,OAAO,CAACT,eAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAES,OAAO,CAACN,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOQ,WAAW,CAACO,SAAnB,CAFF,CATa,EAab;AAAK,QAAA,SAAS,EAAET,OAAO,CAACT,eAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAES,OAAO,CAACN,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOgB,IAAI,CAACC,KAAL,CAAW,CAAC,IAAIC,IAAJ,GAAWC,OAAX,KAAqBX,WAAW,CAACY,SAAlC,IAA6C,IAAxD,IAAgE,cAAvE,CAFF,CAba,CAAH,GAiBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAlBX,CAFF,CADF;AAyBD;;;;EAhCyB9C,KAAK,CAAC+C,S;;AAiCjC;;AAED,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAQC,QAAR,EAAqB;AAAA,uBACTD,KAAK,CAACE,OADG;AAAA,MAC7BC,OAD6B,kBAC7BA,OAD6B;AAAA,MACpBnB,OADoB,kBACpBA,OADoB;AAEpC,SAAO;AAACmB,IAAAA,OAAO,EAAPA,OAAD;AAAUnB,IAAAA,OAAO,EAAPA;AAAV,GAAP;AACD,CAHD;;AAKA,IAAMoB,WAAW,GAAG,SAAdA,WAAc,CAAAC,QAAQ;AAAA,SAAK;AAC/BvB,IAAAA,MAAM,EAAE;AAAA,aAAMuB,QAAQ,CAAC;AAACC,QAAAA,IAAI,EAAErD,OAAO,CAACsD,WAAf;AAA4Bf,QAAAA,SAAS,EAAE,CAAC,OAAxC;AAAiDD,QAAAA,QAAQ,EAAE;AAA3D,OAAD,CAAd;AAAA;AADuB,GAAL;AAAA,CAA5B;;AAIA,eAAevC,OAAO,CAAC+C,QAAD,EAAWK,WAAX,CAAP,CAA+B/C,UAAU,CAACW,MAAD,CAAV,CAAmBW,aAAnB,CAA/B,CAAf","sourcesContent":["import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport * as actions from \"../store/actions\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeaderRaw from \"@material-ui/core/CardHeader\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\n\r\nconst cardStyles = theme => ({\r\n  root: {\r\n    background: theme.palette.primary.main\r\n  },\r\n  title: {\r\n    color: \"white\"\r\n  }\r\n});\r\nconst CardHeader = withStyles(cardStyles)(CardHeaderRaw);\r\n\r\nconst styles = {\r\n  displayCard: {\r\n    margin: \"5% 25%\",\r\n    borderRadius: \"12px\",\r\n    boxShadow: \"1px 1px 4px steelblue\"\r\n  },\r\n  weatherInfo: {\r\n    margin: \"20px 0\"\r\n  },\r\n  weatherInfoItem: {\r\n    width: \"250px\",\r\n    display: \"flex\",\r\n    margin: \"auto\"\r\n  },\r\n  label: {\r\n    width: \"50%\",\r\n    fontSize: \"18px\"\r\n  }\r\n};\r\n\r\nclass WeatherReport extends React.Component {\r\n  componentDidMount() {\r\n    setInterval(() => this.props.onLoad(), 4000);\r\n  }\r\n  render() {\r\n    const {classes, metrics} = this.props;\r\n    const weatherData = metrics.length ? metrics.find((o, i)=>i===metrics.length-1) : false;\r\n    return (\r\n      <Card className={classes.displayCard}>\r\n        <CardHeader title=\"WeatherReport Visualization\"/>\r\n        <CardContent>\r\n          {weatherData ? <div className={classes.weatherInfo}>\r\n            <div className={classes.weatherInfoItem}>\r\n              <span className={classes.label}>Temperature</span>\r\n              <span>{weatherData.metric}</span>\r\n            </div>\r\n            <div className={classes.weatherInfoItem}>\r\n              <span className={classes.label}>Latitude</span>\r\n              <span>{weatherData.latitude}</span>\r\n            </div>\r\n            <div className={classes.weatherInfoItem}>\r\n              <span className={classes.label}>Longitude</span>\r\n              <span>{weatherData.longitude}</span>\r\n            </div>\r\n            <div className={classes.weatherInfoItem}>\r\n              <span className={classes.label}>Last Received</span>\r\n              <span>{Math.round((new Date().getTime()-weatherData.timestamp)/1000) + \" seconds ago\"}</span>\r\n            </div>\r\n          </div> : <h2>loading Details...</h2>}\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapState = (state, ownProps) => {\r\n  const {loading, metrics} = state.weather;\r\n  return {loading, metrics};\r\n};\r\n\r\nconst mapDispatch = dispatch => ({\r\n  onLoad: () => dispatch({type: actions.GET_WEATHER, longitude: -95.3698, latitude: 29.7604})\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(withStyles(styles)(WeatherReport));\r\n"]},"metadata":{},"sourceType":"module"}