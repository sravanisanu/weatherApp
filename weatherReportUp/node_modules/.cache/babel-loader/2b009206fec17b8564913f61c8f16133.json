{"ast":null,"code":"import { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport createSagaMiddleware from \"redux-saga\";\nimport sagas from \"./sagas\";\nimport weatherReducer from \"./reducers/Weather\";\nexport default (function () {\n  var rootReducer = combineReducers({\n    weather: weatherReducer\n  });\n  var composeEnhancers = composeWithDevTools({});\n  var sagaMiddleware = createSagaMiddleware();\n  var middlewares = applyMiddleware(sagaMiddleware);\n  var store = createStore(rootReducer, composeEnhancers(middlewares));\n  sagas.forEach(sagaMiddleware.run);\n  return store;\n});","map":{"version":3,"sources":["C:\\Users\\shrav\\Downloads\\weatherReportUp\\src\\store\\index.js"],"names":["createStore","applyMiddleware","combineReducers","composeWithDevTools","createSagaMiddleware","sagas","weatherReducer","rootReducer","weather","composeEnhancers","sagaMiddleware","middlewares","store","forEach","run"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,cAAP,MAA2B,oBAA3B;AAEA,gBAAe,YAAM;AACnB,MAAMC,WAAW,GAAGL,eAAe,CAAC;AAClCM,IAAAA,OAAO,EAAEF;AADyB,GAAD,CAAnC;AAIA,MAAMG,gBAAgB,GAAGN,mBAAmB,CAAC,EAAD,CAA5C;AACA,MAAMO,cAAc,GAAGN,oBAAoB,EAA3C;AACA,MAAMO,WAAW,GAAGV,eAAe,CAACS,cAAD,CAAnC;AACA,MAAME,KAAK,GAAGZ,WAAW,CAACO,WAAD,EAAcE,gBAAgB,CAACE,WAAD,CAA9B,CAAzB;AAEAN,EAAAA,KAAK,CAACQ,OAAN,CAAcH,cAAc,CAACI,GAA7B;AAEA,SAAOF,KAAP;AACD,CAbD","sourcesContent":["import { createStore, applyMiddleware, combineReducers } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport sagas from \"./sagas\";\r\nimport weatherReducer from \"./reducers/Weather\";\r\n\r\nexport default () => {\r\n  const rootReducer = combineReducers({\r\n    weather: weatherReducer\r\n  });\r\n\r\n  const composeEnhancers = composeWithDevTools({});\r\n  const sagaMiddleware = createSagaMiddleware();\r\n  const middlewares = applyMiddleware(sagaMiddleware);\r\n  const store = createStore(rootReducer, composeEnhancers(middlewares));\r\n\r\n  sagas.forEach(sagaMiddleware.run);\r\n\r\n  return store;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}